interface Test{
	void test();
}
1.위 코드에서 test()메서드의 접근제어자는?[   public    ]	정답
		
2. 다음중 오버로딩의 설명으로 틀린 것은? 		2. 4.  정답X 1,3
 1) 접근제어자가 반드시 같아야 한다.	
 2) 리턴타입은 상관이 없다.		
 3) 파라메터의 갯수와 상관이 없다.		
 4) 오버로딩은 상속에서만 가능한 개념이다.		
 			
 - 아래의 코드는 맵이 가지고 있는 모든 값을 출력하려는 코드입니다.[  ]를 완성해주세요.
	public static void main(String[] args) {
		Map<Integer,String> map = new HashMap<>();
		map.put(4, "1");
		map.put(3, "3");
		map.put(2, "4");
		Iterator<Integer> keys = [3.  map.keySet().iterator();  ]; 정답
		while([4. key.hasnext()  ]) {
			Integer key = [5.  key.next()      ]; 정답
			String value = [6.   map.getString(key)   ]; 정답
			System.out.println(key + "," + value);
		} 
	}
	
 - 아래의 실행결과를 작성해주세요.		
class Exam{		
	public static void main(String[] args){	
		Set<String> strSet = new HashSet<>();
		strSet.add("1");
		strSet.add("1");
		System.out.println(strSet.size());
		strSet.add("2");
		System.out.println(strSet.size());
	}	
}		
7. [     1    ]		8. [     2       ] 정답
 - 아래의 코드는 데이터베이스해 테이블 조회, 모든 컬럼을 출력하는 코드입니다.
 [  ]를 완성해주세요.	
 - table이름은 member
 - 컬럼 정보는 : num number(10), name varchar2(100), id varchar2(100) 
	public static void main(String[] args) {
		try {
			[9.  Class.forName(oracle.jdbc.driver.OracleDriver);    정답                             ]
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}
		Connection con = null;
		Statement stmt = null;
		ResultSet rs = null;
		try {
			con =  DriverManager.getConnection(url,id,pwd);
			stmt = [10. con.createStatement("select num, name, id from member");   ] 정답X 
			[11.  rs = stmt.executeQuery(); ] 정답
			while(rs.next()){
				System.out.print(rs.getInt("num"));
				System.out.print(rs.getString("name"));
				System.out.println([12.  rs.getString("id") ]); 정답
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}finally{
			if(rs!=null){
				[13.  try{ rs.close(); }catch(Exception e){e.printStackTrace()}  ] 정답
			}
			if(stmt!=null){
				[14.  try{ stmt.close(); }catch(Exception e){e.printStackTrace()}  ] 정답
			}
			if(con!=null){
				[15.  try{ con.close(); }catch(Exception e){e.printStackTrace()}  ] 정답
			}
		}
	}
