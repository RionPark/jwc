70점

1.접근제어자의 범위를 큰순서에 맞게 나열한것은? 	3)	
 1) protected>public>default>private		
 2) private>default>protected>public		
 3) public>protected>default>private		
 4) public>default>protected>private		
		
2. 다음중 오버라이딩의 설명으로 틀린 것은? 	2)	 /(2,3)
 1) 접근제어자를 상위 클래스보다 더 작은 범위로 만들수 있다.		
 2) 리턴타입은 상관이 없다.		
 3) 파라메터의 갯수와 상관이 없다.		
 4) 오버라이딩은 상속에서만 가능한 개념이다.		
 		
3. 오버로딩의 정의를 서술해주세요.?		
	1.같은 영역 내에 있어야 한다.
	2.메서드 명이 같아야 한다.
	3.파라메터 갯수가 달라야 한다.
	4.파라메터 갯수가 같더라도 데이터 타입이 달라야 한다.
	5.파라메터 갯수가 같고,데이터 타입이 같더라도 위치가 달라야 한다.	
interface Car{		
}		
class Kia implements Car{		
}		
class Hyundai implements Car{		
}		
5. 위의 코드를 보고 아래의 보기중에 오류가 나는것을 고르시오.	4.	 /(3,4)
   1. Car c = new Kia();		
   2. Car c = new Hyundai();		
   3. Car c = new Car();		
   4. Kia k = new Hyundai();		
		
6. 모든 클래스가 상속받는 클래스를 작성해주세요[       오브젝트                ]		
		
 - 아래의 실행결과를 작성해주세요.		
class Exam{		
	public static void main(String[] args){	
		System.out.println("123"=="123");
		System.out.println("123".equals("123");  <-("123".equals("123"));
	}	
}		
7. [     true       ]		8. [    에러  (오타가 없다면 true)     ]
 - 아래의 코드를 보고 올바른답을 서술하시오.		
class Robot{		
	void shoot(){	
		System.out.println("로봇의 슈팅");
	}	
}		
class Gundam extends Robot{		
	void shoot(){	
		System.out.println("건담의 슈팅");
	}	
	public static void main(String args[]){	
		Gundam gun = new Gundam();
		gun.shoot();
	}	
}		
9. Gundam의 shoot()메소드는 현재 오버라이딩 된것인가 오버로딩 된것인가?		
		오버라이딩
10. 위코드의 실행결과를 작성해주세요.[         건담의 슈팅               ]		
